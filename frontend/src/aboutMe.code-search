# Query: aboutMe
# ContextLines: 1

73 results - 8 files

backend/seeder.js:
   6  import products from './data/products.js';
   7: import aboutMe from './data/aboutMe.js';
   8: import AboutMe from './models/aboutMeModel.js';
   9  import User from './models/userModel.js';

  24  		await FAQs.deleteMany();
  25: 		// await aboutMe.deleteMany();
  26  		const createdUsers = await User.insertMany(users);

  37  
  38: 		const sampleAboutMe = aboutMe.map((aboutMe) => {
  39: 			return { ...aboutMe, user: adminUser };
  40  		});

  42  		await FAQs.insertMany(sampleFAQs);
  43: 		await AboutMe.insertMany(sampleAboutMe);
  44  		console.log('Data Imported!'.green.inverse);

backend/controllers/aboutMeControllers.js:
   1  import asyncHandler from '../middleware/asyncHandler.js';
   2: import AboutMe from '../models/aboutMeModel.js';
   3  
   4: const getAboutMe = asyncHandler(async (req, res) => {
   5: 	const aboutMe = await AboutMe.find({});
   6: 	if (aboutMe) {
   7: 		res.status(201).json(aboutMe);
   8  	} else {

  14  // @desc    Update paragraph//
  15: // @route   PUT /api/aboutMe/
  16  // @access  Private / Admin
  17  
  18: const updateAboutMe = asyncHandler(async (req, res) => {
  19: 	const aboutMe = await aboutMe.findById(req.params.id);
  20: 	if (aboutMe) {
  21: 		const updateAboutMe = asyncHandler(async (req, res) => {
  22  			const { _id, number } = req.body;
  23  
  24: 			const aboutMe = await AwaitMe.findById(req.params.id);
  25  
  26: 			if (aboutMe) {
  27: 				aboutMe.number = number;
  28: 				aboutMe.paragraph = paragraph;
  29  
  30: 				const updatedAboutMe = await aboutMe.save();
  31: 				res.json(updatedAboutMe);
  32  			} else {
  33  				res.status(404);
  34: 				throw new Error('AboutMe not found');
  35  			}

  42  // @access  Private/Admin
  43: const deleteAboutMe = asyncHandler(async (req, res) => {
  44: 	const aboutMe = await AboutMe.findById(req.params.id);
  45  
  46: 	if (aboutMe) {
  47: 		await Product.deleteOne({ _id: aboutMe._id });
  48  		res.json({ message: 'Paragraph removed' });

  53  	export {
  54: 		updateAboutMe,
  55: 		deleteAboutMe,
  56: 		getAboutMe,
  57  	};

backend/data/aboutMe.js:
   2  
   3: const aboutMe = [
   4  	{

  30  
  31: export default aboutMe;
  32  

backend/models/aboutMeModel.js:
   2  
   3: const aboutMeSchema = new mongoose.Schema(
   4  	{

  14  );
  15: const AboutMe = mongoose.model('AboutMe', aboutMeSchema);
  16  
  17: export default AboutMe;
  18  

backend/routes/aboutMeRoutes.js:
   7  import {
   8: 	getAboutMe,
   9: 	updateAboutMe,
  10: 	deleteAboutMe,
  11: } from '../controllers/aboutMeController.js';
  12  
  13: router.route('/').get(getAboutMe);
  14  

  16  	.route('/:id')
  17: 	.put(admin, updateAboutMe)
  18: 	.delete(admin, deleteAboutMe);
  19  export default router;

frontend/src/index.js:
  23  import AboutScreen from './screens/AboutScreen';
  24: import AboutMeEditScreen from './screens/admin/AboutMeEditScreen.jsx';
  25  import ServicesScreen from './screens/ServicesScreen';

  46  			<Route path='/admin/user/:id/edit' element={<UserEditScreen />} />
  47: 			<Route path='/admin/about/edit' element={<AboutMeEditScreen />} />
  48  		</Route>

frontend/src/screens/admin/AboutMeEditScreen.jsx:
  2  
  3: const AboutMeEditScreen = () => {
  4  	return <div></div>;

  6  
  7: export default AboutMeEditScreen;
  8  

frontend/src/slices/aboutMeApiSlice.js:
   3  
   4: export const aboutMeApiSlice = apiSlice.injectEndpoints({
   5  	endpoints: (builder) => ({
   6: 		getAboutMe: builder.query({
   7  			query: () => ({

  10  			keepUnusedDataFor: 5,
  11: 			providesTags: ['AboutMe'],
  12  		}),
  13: 		updateAboutMe: builder.mutation({
  14  			query: (data) => ({
  15: 				url: `${ABOUT_ME_URL}/${data.aboutMeId}`,
  16  				method: 'PUT',

  18  			}),
  19: 			invalidatesTags: ['AboutMe'],
  20  		}),
  21  
  22: 		deleteAboutMe: builder.mutation({
  23: 			query: (aboutMeId) => ({
  24: 				url: `${ABOUT_ME_URL}/${aboutMeId}`,
  25  				method: 'DELETE',
  26  			}),
  27: 			providesTags: ['AboutMe'],
  28  		}),

  32  export const {
  33: 	useGetAboutMeQuery,
  34: 	useUpdateAboutMeMutation,
  35: 	useDeleteAboutMeMutation,
  36: } = aboutMeApiSlice;
  37  
